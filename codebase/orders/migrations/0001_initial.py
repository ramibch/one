# Generated by Django 5.0.2 on 2024-02-25 23:18

import uuid

import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        #  ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "email",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_city",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_country",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_postal_code",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
                (
                    "address_state",
                    models.CharField(blank=True, default="", max_length=512, null=True),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("event_id", models.CharField(blank=True, default="", max_length=512)),
                (
                    "invoice_id",
                    models.CharField(blank=True, default="", max_length=512),
                ),
                (
                    "invoice_pdf",
                    models.CharField(blank=True, max_length=2048, null=True),
                ),
                ("invoice_payload", models.TextField(null=True)),
                (
                    "payment_intent",
                    models.CharField(blank=True, default="", max_length=512),
                ),
                ("checkout_payload", models.TextField(null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="orders.customer",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.listingproduct",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
