# Generated by Django 5.0.6 on 2024-05-19 18:07

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
import profiles.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sessions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("temporal", "‚è≥ Temporal"),
                            ("user", "üë§ User profile"),
                            ("template", "üìä Template"),
                        ],
                        default="user",
                        max_length=16,
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        default="en",
                        max_length=64,
                        null=True,
                        verbose_name="Language code",
                    ),
                ),
                ("public", models.BooleanField(default=False)),
                ("auto_created", models.BooleanField(default=False)),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=16, null=True, unique=True),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "fullname",
                    models.CharField(
                        max_length=64, null=True, verbose_name="Full name"
                    ),
                ),
                (
                    "jobtitle",
                    models.CharField(
                        max_length=64, null=True, verbose_name="Job title"
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=64, null=True, verbose_name="Location"),
                ),
                (
                    "birth",
                    models.CharField(max_length=64, null=True, verbose_name="Birth"),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=64, null=True, verbose_name="Phone number"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=64, null=True, verbose_name="Full name"
                    ),
                ),
                (
                    "website",
                    models.URLField(max_length=32, null=True, verbose_name="Website"),
                ),
                ("about", models.TextField(max_length=2048, null=True)),
                ("about_rows", models.PositiveSmallIntegerField(default=15)),
                (
                    "photo_active",
                    models.BooleanField(default=True, verbose_name="Photo"),
                ),
                (
                    "jobtitle_active",
                    models.BooleanField(default=True, verbose_name="Job title"),
                ),
                (
                    "location_active",
                    models.BooleanField(default=False, verbose_name="Location"),
                ),
                (
                    "birth_active",
                    models.BooleanField(default=False, verbose_name="Birth date"),
                ),
                (
                    "phone_active",
                    models.BooleanField(default=True, verbose_name="Phone number"),
                ),
                (
                    "email_active",
                    models.BooleanField(default=True, verbose_name="Email address"),
                ),
                (
                    "website_active",
                    models.BooleanField(default=False, verbose_name="Website"),
                ),
                (
                    "about_active",
                    models.BooleanField(default=True, verbose_name="About me"),
                ),
                (
                    "skill_active",
                    models.BooleanField(default=True, verbose_name="Skills"),
                ),
                (
                    "language_active",
                    models.BooleanField(default=False, verbose_name="Languages"),
                ),
                (
                    "education_active",
                    models.BooleanField(default=True, verbose_name="Education"),
                ),
                (
                    "experience_active",
                    models.BooleanField(default=True, verbose_name="Work experience"),
                ),
                (
                    "achievement_active",
                    models.BooleanField(default=False, verbose_name="Achievements"),
                ),
                (
                    "project_active",
                    models.BooleanField(default=False, verbose_name="Projects"),
                ),
                (
                    "publication_active",
                    models.BooleanField(default=False, verbose_name="Publications"),
                ),
                (
                    "fullname_label",
                    models.CharField(default="Full name", max_length=32),
                ),
                (
                    "jobtitle_label",
                    models.CharField(default="Job title", max_length=32),
                ),
                ("location_label", models.CharField(default="Location", max_length=32)),
                ("birth_label", models.CharField(default="Birth date", max_length=32)),
                (
                    "phone_label",
                    models.CharField(default="Phone number", max_length=32),
                ),
                (
                    "email_label",
                    models.CharField(default="Email address", max_length=32),
                ),
                ("website_label", models.CharField(default="Website", max_length=32)),
                ("about_label", models.CharField(default="About me", max_length=32)),
                ("skill_label", models.CharField(default="Skills", max_length=32)),
                (
                    "language_label",
                    models.CharField(default="Languages", max_length=32),
                ),
                (
                    "education_label",
                    models.CharField(default="Education", max_length=32),
                ),
                (
                    "experience_label",
                    models.CharField(default="Work experience", max_length=32),
                ),
                (
                    "achievement_label",
                    models.CharField(default="Achievements", max_length=32),
                ),
                ("project_label", models.CharField(default="Projects", max_length=32)),
                (
                    "publication_label",
                    models.CharField(default="Publications", max_length=32),
                ),
                (
                    "full_photo",
                    models.ImageField(
                        null=True, upload_to=profiles.models.get_photo_upload_path
                    ),
                ),
                (
                    "cropped_photo",
                    models.ImageField(
                        null=True, upload_to=profiles.models.get_photo_upload_path
                    ),
                ),
                ("crop_x", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("crop_y", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("crop_width", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "crop_height",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "session",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_set",
                        to="sessions.session",
                    ),
                ),
                (
                    "user",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profile_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="LanguageAbility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("name", models.CharField(max_length=50, verbose_name="üó£Ô∏è Language")),
                ("level", models.IntegerField(default=50, verbose_name="Level")),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, profiles.models.LevelMethodsMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "start_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è Start date"),
                ),
                (
                    "end_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è End date"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="üìù Description",
                    ),
                ),
                ("rows", models.PositiveSmallIntegerField(default=10)),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="üßë\u200düíº Job title",
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=32, verbose_name="üìç Location"),
                ),
                (
                    "company",
                    models.CharField(max_length=32, verbose_name="üè¢ Company name"),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Experience",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "start_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è Start date"),
                ),
                (
                    "end_date",
                    models.CharField(max_length=16, verbose_name="üóìÔ∏è End date"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="üìù Description",
                    ),
                ),
                ("rows", models.PositiveSmallIntegerField(default=10)),
                ("title", models.CharField(max_length=64, verbose_name="üéì Title")),
                (
                    "institution",
                    models.CharField(max_length=32, verbose_name="üè´ Institution"),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Education",
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "title",
                    models.CharField(max_length=64, verbose_name="üèÜ Goal achieved"),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="üóìÔ∏è Date"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "title",
                    models.CharField(max_length=64, verbose_name="üåç Project name"),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="üßë\u200düíº Role in the project",
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="ü§ù Organization",
                    ),
                ),
                (
                    "link",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="üîó Link"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                (
                    "date",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="üóìÔ∏è Date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=128, verbose_name="üî¨ Publication title"
                    ),
                ),
                (
                    "authors",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="üë• Authors"
                    ),
                ),
                (
                    "publisher",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="üìë Publisher",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True, max_length=128, null=True, verbose_name="üîó Link"
                    ),
                ),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=1)),
                ("name", models.CharField(max_length=50, verbose_name="üìä Skill")),
                ("level", models.IntegerField(default=50, verbose_name="Level")),
                (
                    "profile",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            bases=(models.Model, profiles.models.LevelMethodsMixin),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
