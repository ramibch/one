# Generated by Django 5.2 on 2025-06-15 18:44

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.functions.text
import django.db.models.manager
import one.candidates.models
import one.db
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CandidateCertificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("name_en", models.CharField(max_length=128, null=True)),
                ("name_de", models.CharField(max_length=128, null=True)),
                ("name_es", models.CharField(max_length=128, null=True)),
                ("name_fr", models.CharField(max_length=128, null=True)),
                ("name_it", models.CharField(max_length=128, null=True)),
                ("name_nl", models.CharField(max_length=128, null=True)),
                ("name_pt", models.CharField(max_length=128, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateEducation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution_name", models.CharField(max_length=64)),
                ("title", models.CharField(max_length=64)),
                ("title_en", models.CharField(max_length=64, null=True)),
                ("title_de", models.CharField(max_length=64, null=True)),
                ("title_es", models.CharField(max_length=64, null=True)),
                ("title_fr", models.CharField(max_length=64, null=True)),
                ("title_it", models.CharField(max_length=64, null=True)),
                ("title_nl", models.CharField(max_length=64, null=True)),
                ("title_pt", models.CharField(max_length=64, null=True)),
                ("from_to", models.CharField(max_length=32)),
                ("from_to_en", models.CharField(max_length=32, null=True)),
                ("from_to_de", models.CharField(max_length=32, null=True)),
                ("from_to_es", models.CharField(max_length=32, null=True)),
                ("from_to_fr", models.CharField(max_length=32, null=True)),
                ("from_to_it", models.CharField(max_length=32, null=True)),
                ("from_to_nl", models.CharField(max_length=32, null=True)),
                ("from_to_pt", models.CharField(max_length=32, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_it", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_pt", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("company_name", models.CharField(max_length=64)),
                ("job_title", models.CharField(max_length=64)),
                ("job_title_en", models.CharField(max_length=64, null=True)),
                ("job_title_de", models.CharField(max_length=64, null=True)),
                ("job_title_es", models.CharField(max_length=64, null=True)),
                ("job_title_fr", models.CharField(max_length=64, null=True)),
                ("job_title_it", models.CharField(max_length=64, null=True)),
                ("job_title_nl", models.CharField(max_length=64, null=True)),
                ("job_title_pt", models.CharField(max_length=64, null=True)),
                ("from_to", models.CharField(max_length=32)),
                ("from_to_en", models.CharField(max_length=32, null=True)),
                ("from_to_de", models.CharField(max_length=32, null=True)),
                ("from_to_es", models.CharField(max_length=32, null=True)),
                ("from_to_fr", models.CharField(max_length=32, null=True)),
                ("from_to_it", models.CharField(max_length=32, null=True)),
                ("from_to_nl", models.CharField(max_length=32, null=True)),
                ("from_to_pt", models.CharField(max_length=32, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_it", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_pt", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateJobAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("query", models.CharField(max_length=255)),
                ("area", django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                (
                    "notification",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("none", "No notification"),
                        ],
                        default="weekly",
                    ),
                ),
                (
                    "languages",
                    one.db.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("en", "English"),
                                ("de", "German"),
                                ("es", "Spanish"),
                                ("fr", "French"),
                                ("it", "Italian"),
                                ("nl", "Dutch"),
                                ("pt", "Portuguese"),
                            ],
                            max_length=8,
                        ),
                        blank=True,
                        db_index=True,
                        default=list,
                        size=None,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateLanguageSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateProfile",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("de", "German"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("it", "Italian"),
                            ("nl", "Dutch"),
                            ("pt", "Portuguese"),
                        ],
                        db_index=True,
                        default="en",
                        max_length=4,
                    ),
                ),
                (
                    "languages",
                    one.db.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("en", "English"),
                                ("de", "German"),
                                ("es", "Spanish"),
                                ("fr", "French"),
                                ("it", "Italian"),
                                ("nl", "Dutch"),
                                ("pt", "Portuguese"),
                            ],
                            max_length=8,
                        ),
                        blank=True,
                        db_index=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("m", "male"), ("f", "female")],
                        max_length=64,
                        null=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(max_length=64)),
                (
                    "full_name",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.text.Concat(
                            "first_name", models.Value(" "), "last_name"
                        ),
                        output_field=models.CharField(max_length=128),
                    ),
                ),
                ("job_title", models.CharField(max_length=64)),
                ("job_title_en", models.CharField(max_length=64, null=True)),
                ("job_title_de", models.CharField(max_length=64, null=True)),
                ("job_title_es", models.CharField(max_length=64, null=True)),
                ("job_title_fr", models.CharField(max_length=64, null=True)),
                ("job_title_it", models.CharField(max_length=64, null=True)),
                ("job_title_nl", models.CharField(max_length=64, null=True)),
                ("job_title_pt", models.CharField(max_length=64, null=True)),
                ("email", models.EmailField(max_length=64)),
                ("phone", models.CharField(max_length=32)),
                ("location", models.CharField(max_length=32)),
                ("location_en", models.CharField(max_length=32, null=True)),
                ("location_de", models.CharField(max_length=32, null=True)),
                ("location_es", models.CharField(max_length=32, null=True)),
                ("location_fr", models.CharField(max_length=32, null=True)),
                ("location_it", models.CharField(max_length=32, null=True)),
                ("location_nl", models.CharField(max_length=32, null=True)),
                ("location_pt", models.CharField(max_length=32, null=True)),
                (
                    "linkedin_url",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("website_url", models.URLField(blank=True, max_length=128, null=True)),
                ("about", models.TextField(blank=True, null=True)),
                ("about_en", models.TextField(blank=True, null=True)),
                ("about_de", models.TextField(blank=True, null=True)),
                ("about_es", models.TextField(blank=True, null=True)),
                ("about_fr", models.TextField(blank=True, null=True)),
                ("about_it", models.TextField(blank=True, null=True)),
                ("about_nl", models.TextField(blank=True, null=True)),
                ("about_pt", models.TextField(blank=True, null=True)),
                ("coverletter_body", models.TextField(blank=True, null=True)),
                ("coverletter_body_en", models.TextField(blank=True, null=True)),
                ("coverletter_body_de", models.TextField(blank=True, null=True)),
                ("coverletter_body_es", models.TextField(blank=True, null=True)),
                ("coverletter_body_fr", models.TextField(blank=True, null=True)),
                ("coverletter_body_it", models.TextField(blank=True, null=True)),
                ("coverletter_body_nl", models.TextField(blank=True, null=True)),
                ("coverletter_body_pt", models.TextField(blank=True, null=True)),
                (
                    "about_label",
                    models.CharField(default="Professional Profile", max_length=32),
                ),
                (
                    "about_label_en",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_de",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_es",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_fr",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_it",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_nl",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "about_label_pt",
                    models.CharField(
                        default="Professional Profile", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label",
                    models.CharField(default="Work Experience", max_length=32),
                ),
                (
                    "experience_label_en",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_de",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_es",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_fr",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_it",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_nl",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "experience_label_pt",
                    models.CharField(
                        default="Work Experience", max_length=32, null=True
                    ),
                ),
                (
                    "education_label",
                    models.CharField(default="Education", max_length=32),
                ),
                (
                    "education_label_en",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_de",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_es",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_fr",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_it",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_nl",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "education_label_pt",
                    models.CharField(default="Education", max_length=32, null=True),
                ),
                (
                    "skill_label",
                    models.CharField(default="Technical Skills", max_length=32),
                ),
                (
                    "skill_label_en",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_de",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_es",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_fr",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_it",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_nl",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "skill_label_pt",
                    models.CharField(
                        default="Technical Skills", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label",
                    models.CharField(default="Certifications", max_length=32),
                ),
                (
                    "certificate_label_en",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_de",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_es",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_fr",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_it",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_nl",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "certificate_label_pt",
                    models.CharField(
                        default="Certifications", max_length=32, null=True
                    ),
                ),
                (
                    "language_label",
                    models.CharField(default="Languages", max_length=32),
                ),
                (
                    "language_label_en",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_de",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_es",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_fr",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_it",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_nl",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                (
                    "language_label_pt",
                    models.CharField(default="Languages", max_length=32, null=True),
                ),
                ("project_label", models.CharField(default="Projects", max_length=32)),
                (
                    "project_label_en",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_de",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_es",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_fr",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_it",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_nl",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "project_label_pt",
                    models.CharField(default="Projects", max_length=32, null=True),
                ),
                (
                    "photo",
                    models.ImageField(
                        null=True,
                        upload_to=one.candidates.models.Candidate.get_upload_path,
                    ),
                ),
                (
                    "docs",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.Candidate.get_upload_path,
                    ),
                ),
                (
                    "own_cv",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.Candidate.get_upload_path,
                    ),
                ),
                ("receive_job_alerts", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=64)),
                ("title_en", models.CharField(max_length=64, null=True)),
                ("title_de", models.CharField(max_length=64, null=True)),
                ("title_es", models.CharField(max_length=64, null=True)),
                ("title_fr", models.CharField(max_length=64, null=True)),
                ("title_it", models.CharField(max_length=64, null=True)),
                ("title_nl", models.CharField(max_length=64, null=True)),
                ("title_pt", models.CharField(max_length=64, null=True)),
                ("url", models.URLField(blank=True, max_length=128, null=True)),
                ("from_to", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_en", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_de", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_es", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_fr", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_it", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_nl", models.CharField(blank=True, max_length=32, null=True)),
                ("from_to_pt", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_en",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_de",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_es",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_fr",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_it",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_nl",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "description_pt",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=64)),
                ("name_en", models.CharField(max_length=64, null=True)),
                ("name_de", models.CharField(max_length=64, null=True)),
                ("name_es", models.CharField(max_length=64, null=True)),
                ("name_fr", models.CharField(max_length=64, null=True)),
                ("name_it", models.CharField(max_length=64, null=True)),
                ("name_nl", models.CharField(max_length=64, null=True)),
                ("name_pt", models.CharField(max_length=64, null=True)),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        default=3,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="JobApplication",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "coverletter",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.JobApplication.get_upload_path,
                    ),
                ),
                ("coverletter_text", models.TextField(blank=True, null=True)),
                (
                    "dossier",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.JobApplication.get_upload_path,
                    ),
                ),
                ("dossier_text", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TexCv",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        choices=[
                            ("candidates/tex/cv_alice.tex", "Alice"),
                            ("candidates/tex/cv_developer.tex", "Developer"),
                            ("candidates/tex/cv_freeman.tex", "Freeman"),
                            ("candidates/tex/cv_krieger.tex", "Krieger"),
                            ("candidates/tex/cv_marissa.tex", "Marissa"),
                            ("candidates/tex/cv_modern.tex", "Modern"),
                            ("candidates/tex/cv_receive.tex", "Receive"),
                        ],
                        max_length=64,
                    ),
                ),
                ("cv_text", models.TextField(blank=True, null=True)),
                (
                    "cv_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.TexCv.get_upload_path,
                    ),
                ),
                (
                    "cv_pdf",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=one.candidates.models.TexCv.get_upload_path,
                    ),
                ),
                ("latex_pt", models.PositiveSmallIntegerField(default=12)),
                ("margin_left", models.PositiveSmallIntegerField(default=25)),
                ("margin_right", models.PositiveSmallIntegerField(default=20)),
                ("margin_top", models.PositiveSmallIntegerField(default=20)),
                ("margin_bottom", models.PositiveSmallIntegerField(default=20)),
                (
                    "margin_unit",
                    models.CharField(
                        choices=[("mm", "Millimeters"), ("in", "Inches")], default="mm"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
