# Generated by Django 5.1.4 on 2025-01-28 04:23

import auto_prefetch
import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0011_rename_rest_languages_topic_languages"),
        ("etsy", "0005_rename_rest_languages_shop_languages"),
        ("products", "0010_rename_summary_product_description_and_more"),
    ]

    operations = [
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description",
            new_name="generic_listing_description",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_de",
            new_name="generic_listing_description_de",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_el",
            new_name="generic_listing_description_el",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_en",
            new_name="generic_listing_description_en",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_es",
            new_name="generic_listing_description_es",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_fr",
            new_name="generic_listing_description_fr",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_it",
            new_name="generic_listing_description_it",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_nl",
            new_name="generic_listing_description_nl",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_pl",
            new_name="generic_listing_description_pl",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_pt",
            new_name="generic_listing_description_pt",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_ru",
            new_name="generic_listing_description_ru",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_sk",
            new_name="generic_listing_description_sk",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_sl",
            new_name="generic_listing_description_sl",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_sv",
            new_name="generic_listing_description_sv",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_tr",
            new_name="generic_listing_description_tr",
        ),
        migrations.RenameField(
            model_name="shop",
            old_name="general_listing_description_uk",
            new_name="generic_listing_description_uk",
        ),
        migrations.RemoveField(
            model_name="shop",
            name="products",
        ),
        migrations.AddField(
            model_name="shop",
            name="overprice_percentage",
            field=models.SmallIntegerField(
                default=150,
                help_text="Percent to apply to Etsy listing price.",
                validators=[
                    django.core.validators.MinValueValidator(100),
                    django.core.validators.MaxValueValidator(300),
                ],
                verbose_name="Overprice percentace",
            ),
        ),
        migrations.AddField(
            model_name="shop",
            name="topics",
            field=models.ManyToManyField(to="base.topic"),
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveSmallIntegerField(default=1000)),
                ("price", models.FloatField(default=1.0)),
                (
                    "who_made",
                    models.CharField(
                        choices=[
                            ("i_did", "I did"),
                            ("someone_else", "Someone else"),
                            ("collective", "Collective"),
                        ],
                        default="i_did",
                        max_length=32,
                    ),
                ),
                (
                    "when_made",
                    models.CharField(
                        choices=[
                            ("made_to_order", "Made to order"),
                            ("2020_2025", "2020 - 2025"),
                            ("2010_2019", "2010 - 2019"),
                            ("2006_2009", "2006 - 2009"),
                            ("before_2006", "Before 2006"),
                        ],
                        default="2020_2025",
                        max_length=32,
                    ),
                ),
                (
                    "taxonomy_id",
                    models.PositiveIntegerField(
                        choices=[(2078, "Digital prints")], default=2078
                    ),
                ),
                ("listing_id", models.PositiveIntegerField(blank=True, null=True)),
                ("url", models.URLField(blank=True, max_length=256, null=True)),
                ("state", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "shop",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="etsy.shop"
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
