# Generated by Django 5.2 on 2025-04-26 09:29

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
import one.articles.models
import one.base.utils.db
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "languages",
                    one.base.utils.db.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("en", "English"),
                                ("de", "German"),
                                ("es", "Spanish"),
                                ("fr", "French"),
                                ("it", "Italian"),
                                ("nl", "Dutch"),
                                ("pt", "Portuguese"),
                            ],
                            max_length=8,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("title", models.CharField(editable=False, max_length=256)),
                (
                    "title_en",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_de",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_es",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_fr",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_it",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_nl",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                (
                    "title_pt",
                    models.CharField(editable=False, max_length=256, null=True),
                ),
                ("slug", models.SlugField(editable=False, max_length=128)),
                (
                    "slug_en",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_de",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_es",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_fr",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_it",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_nl",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                (
                    "slug_pt",
                    models.SlugField(editable=False, max_length=128, null=True),
                ),
                ("folder_name", models.CharField(editable=False, max_length=128)),
                ("subfolder_name", models.CharField(editable=False, max_length=256)),
                ("body", models.TextField(editable=False)),
                ("body_en", models.TextField(editable=False, null=True)),
                ("body_de", models.TextField(editable=False, null=True)),
                ("body_es", models.TextField(editable=False, null=True)),
                ("body_fr", models.TextField(editable=False, null=True)),
                ("body_it", models.TextField(editable=False, null=True)),
                ("body_nl", models.TextField(editable=False, null=True)),
                ("body_pt", models.TextField(editable=False, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("allow_comments", models.BooleanField(default=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("featured", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="MainTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(editable=False, max_length=64, unique=True)),
                (
                    "present_in_filesystem",
                    models.BooleanField(default=True, editable=False),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ArticleFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "file",
                    models.FileField(
                        upload_to=one.articles.models.get_article_file_path
                    ),
                ),
                (
                    "article",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="articles.article",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(max_length=512, verbose_name="Comment")),
                (
                    "article",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="articles.article",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
