# Generated by Django 5.1.4 on 2025-02-18 07:05

import auto_prefetch
import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models

import one.base.utils.db


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0011_rename_rest_languages_topic_languages"),
        ("etsy", "0028_remove_shop_topics_remove_shop_user_shop_auth_and_more"),
        ("products", "0010_rename_summary_product_description_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="EtsyShop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("de", "German"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("el", "Greek"),
                            ("it", "Italian"),
                            ("nl", "Dutch"),
                            ("pl", "Polish"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("sk", "Slovak"),
                            ("sl", "Slovenian"),
                            ("sv", "Swedish"),
                            ("tr", "Turkish"),
                            ("uk", "Ukrainian"),
                        ],
                        default="en",
                        max_length=4,
                    ),
                ),
                (
                    "languages",
                    one.base.utils.db.ChoiceArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("en", "English"),
                                ("de", "German"),
                                ("es", "Spanish"),
                                ("fr", "French"),
                                ("el", "Greek"),
                                ("it", "Italian"),
                                ("nl", "Dutch"),
                                ("pl", "Polish"),
                                ("pt", "Portuguese"),
                                ("ru", "Russian"),
                                ("sk", "Slovak"),
                                ("sl", "Slovenian"),
                                ("sv", "Swedish"),
                                ("tr", "Turkish"),
                                ("uk", "Ukrainian"),
                            ],
                            max_length=8,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("name", models.CharField(default="Shop example", max_length=64)),
                ("generic_listing_description", models.TextField()),
                ("generic_listing_description_en", models.TextField(null=True)),
                ("generic_listing_description_de", models.TextField(null=True)),
                ("generic_listing_description_es", models.TextField(null=True)),
                ("generic_listing_description_fr", models.TextField(null=True)),
                ("generic_listing_description_el", models.TextField(null=True)),
                ("generic_listing_description_it", models.TextField(null=True)),
                ("generic_listing_description_nl", models.TextField(null=True)),
                ("generic_listing_description_pl", models.TextField(null=True)),
                ("generic_listing_description_pt", models.TextField(null=True)),
                ("generic_listing_description_ru", models.TextField(null=True)),
                ("generic_listing_description_sk", models.TextField(null=True)),
                ("generic_listing_description_sl", models.TextField(null=True)),
                ("generic_listing_description_sv", models.TextField(null=True)),
                ("generic_listing_description_tr", models.TextField(null=True)),
                ("generic_listing_description_uk", models.TextField(null=True)),
                (
                    "price_percentage",
                    models.SmallIntegerField(
                        default=150,
                        help_text="Percent to apply to Etsy listing price.",
                        validators=[
                            django.core.validators.MinValueValidator(50),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Price percentace",
                    ),
                ),
                ("etsy_payload", models.JSONField(blank=True, null=True)),
                # ("topics", models.ManyToManyField(to="base.topic")),
                (
                    "user_shop_auth",
                    auto_prefetch.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="etsy.usershopauth",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveSmallIntegerField(
                        default=999,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(999),
                        ],
                    ),
                ),
                ("price", models.FloatField(default=1.0)),
                (
                    "who_made",
                    models.CharField(
                        choices=[
                            ("i_did", "I did"),
                            ("someone_else", "Someone else"),
                            ("collective", "Collective"),
                        ],
                        default="i_did",
                        max_length=32,
                    ),
                ),
                (
                    "when_made",
                    models.CharField(
                        choices=[
                            ("made_to_order", "Made to order"),
                            ("2020_2025", "2020 - 2025"),
                            ("2010_2019", "2010 - 2019"),
                            ("2006_2009", "2006 - 2009"),
                            ("before_2006", "Before 2006"),
                        ],
                        default="2020_2025",
                        max_length=32,
                    ),
                ),
                (
                    "taxonomy_id",
                    models.PositiveIntegerField(
                        choices=[(2078, "Digital prints")], default=2078
                    ),
                ),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("physical", "Physical"),
                            ("download", "Download"),
                            ("both", "Both"),
                        ],
                        default="download",
                        max_length=32,
                    ),
                ),
                ("response", models.JSONField(blank=True, null=True)),
                ("listing_id", models.PositiveIntegerField(blank=True, null=True)),
                ("url", models.URLField(blank=True, max_length=256, null=True)),
                ("state", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "product",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "shop",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.etsyshop",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
